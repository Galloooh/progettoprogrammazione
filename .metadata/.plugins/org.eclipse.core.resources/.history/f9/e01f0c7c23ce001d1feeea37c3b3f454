#include <ncurses.h>
#include "character.hpp"
#include <unistd.h>
const int dim_colonna = 70;
const int dim_riga = 25;

Character::Character(int x, int y) {
    x_pos = x;
    y_pos = y;
}

void Character::moveLeft() {
    if (x_pos > 2) { // controlla che il personaggio non vada fuori dalla cornice
        x_pos--;
    }
}

void Character::moveRight() {
    if (x_pos < dim_colonna - 2) { // controlla che il personaggio non vada fuori dalla cornice
        x_pos++;
    }
}

void Character::jump() {
    int max_jump_height = 3; // altezza massima del salto
    int ground_level = 18; // altezza del bordo inferiore della cornice
    int current_jump_height = 0; // altezza attuale del salto

    // salta fino a raggiungere l'altezza massima del salto
    while (current_jump_height < max_jump_height && y_pos > 2) {
        y_pos -= 2; // il personaggio salta di due blocchi
        current_jump_height++;
        usleep(100000); // Pausa per rallentare l'animazione del salto
    }

    // torna a terra
    while (y_pos < ground_level) {
        y_pos += 2; // il personaggio scende di due blocchi
        usleep(100000); // Pausa per rallentare l'animazione del ritorno a terra
    }

    // se il personaggio Ã¨ sceso troppo, lo posizioniamo a terra
    if (y_pos > ground_level) {
        y_pos = ground_level;
    }
}



void Character::fall() {
    if (y_pos < dim_riga - 2) { // controlla che il personaggio non vada fuori dalla cornice
        y_pos++;
    }
}

void Character::display() {
    mvaddch(y_pos, x_pos, 'P');
    mvaddch(y_pos, x_pos - 1, ' '); // cancella il carattere precedente
    mvaddch(y_pos , x_pos + 1, ' '); // cancella il carattere precedente
    mvaddch(y_pos + 2 , x_pos , ' '); // cancella il carattere precedente

}
