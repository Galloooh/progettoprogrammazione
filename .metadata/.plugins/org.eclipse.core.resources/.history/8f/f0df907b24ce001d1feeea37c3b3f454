#include <ncurses.h>
#include "character.hpp"
#include <unistd.h>
const int dim_colonna = 70;
const int dim_riga = 25;

Character::Character(int x, int y) {
    x_pos = x;
    y_pos = y;
}

void Character::moveLeft() {
    if (x_pos > 2) { // controlla che il personaggio non vada fuori dalla cornice
        x_pos--;
    }
}

void Character::moveRight() {
    if (x_pos < dim_colonna - 2) { // controlla che il personaggio non vada fuori dalla cornice
        x_pos++;
    }
}

void Character::jump() {
    int jump_height = 3; // altezza del salto in blocchi
    int jump_duration = 10; // durata del salto in cicli

    for (int i = 0; i < jump_duration; i++) {
        if (y_pos > jump_height) {
            y_pos--; // il personaggio salta di un blocco
        } else {
            break; // raggiunto il massimo della salto, esce dal ciclo
        }
        usleep(100000); // Pausa per rallentare l'animazione del salto
    }

    // ritorno a terra
    for (int i = 0; i < jump_duration; i++) {
        if (y_pos != 0) {
            y_pos++; // il personaggio scende di un blocco
        } else {
            break; // raggiunto il bordo inferiore della cornice, esce dal ciclo
        }
        usleep(100000); // Pausa per rallentare l'animazione del ritorno a terra
    }
}




void Character::fall() {
    if (y_pos < dim_riga - 2) { // controlla che il personaggio non vada fuori dalla cornice
        y_pos++;
    }
}

void Character::display() {
    mvaddch(y_pos, x_pos, 'P');
    mvaddch(y_pos, x_pos - 1, ' '); // cancella il carattere precedente
    mvaddch(y_pos , x_pos + 1, ' '); // cancella il carattere precedente

}
